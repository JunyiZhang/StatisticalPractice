{
    "collab_server" : "",
    "contents" : "## load in data\nclean_datasets = list.files(pattern = \"clean\")\ndata_eye = NA\nfor(file in clean_datasets) {\n  data_temp = read.csv(file)\n  data_eye = rbind(data_eye, data_temp)\n}\ndata_eye = data_eye[-1, ]\n\ncolnames(data_eye) = tolower(colnames(data_eye))\ncolnames(data_eye)[1] = \"id\"\n\ndata_compre = read.csv(\"compre_abv.csv\")\ndata_reading = read.csv(\"reading_abv.csv\")\n\n\n## merge data\neye_id = unique(as.character(data_eye$id))\ncompre_id = unique(as.character(data_compre$id))\nreading_id = unique(as.character(data_reading$id))\n\nid = intersect(eye_id, compre_id)\nid = intersect(id, reading_id)\n\ndata_compre = data_compre[!as.character(data_compre$id) %in% compre_id_diff, ]\ndata_eye = data_eye[!as.character(data_eye$id) %in% eye_id_diff, ]\ndata_reading = data_reading[!as.character(data_reading$id) %in% reading_id_diff, ]\n\ndata = merge(data_compre, data_eye, by = c(\"id\", \"version\"))\ndata = merge(data, data_reading, by = \"id\")\n\ndata$trial = as.numeric(gsub(\"Trial\", \"\", as.character(data$trial)))\n\n\n## split the data by version\nversions = split(data, data$version)\n\n# version 1\nv1 = versions[[1]]\nv1$layout1 = \"separated\"\nv1$layout1[v1$condition == \"standard\"] = \"standard\"\nv1$layout2 = \"separated\"\nv1$layout2[v1$trial %in% 1:4] = \"standard\"\nall(v1$layout1 == v1$layout2) # check\nv1$layout = v1$layout1\n\n# version 2\nv2 = versions[[2]]\nv2$layout1 = \"separated\"\nv2$layout1[v2$condition == \"standard\"] = \"standard\"\nv2$layout2 = \"separated\"\nv2$layout2[v2$trial %in% 9:12] = \"standard\"\nall(v2$layout1 == v2$layout2) # check\nv2$layout = v2$layout1\n\n# version 3\nv3 = versions[[3]]\nv3$layout = \"partial\"\nv3$layout[v3$trial %in% 1:4] = \"standard\"\nall(v3$layout == v3$condition) # check\n\n# version 4\nv4 = versions[[4]]\nv4$layout = \"partial\"\nv4$layout[v4$trial %in% 5:8] = \"standard\"\nall(v4$layout == v4$condition) # check\n\n# version 5\nv5 = versions[[5]]\nv5$layout = \"clean\"\nv5$layout[v5$trial %in% 1:3] = \"standard\"\nall(v5$layout == v5$condition) # check\n\n# version 6\nv6 = versions[[6]]\nv6$layout = \"clean\"\nv6$layout[v6$trial %in% 4:6] = \"standard\"\nall(v6$layout == v6$condition) # check\n\nv1$id = as.character(v1$id)\nv1_ids = split(v1, v1$id)\n\nv2$id = as.character(v2$id)\nv2_ids = split(v2, v2$id)\n\nv3$id = as.character(v3$id)\nv3_ids = split(v3, v3$id)\n\nv4$id = as.character(v4$id)\nv4_ids = split(v4, v4$id)\n\nv5$id = as.character(v5$id)\nv5_ids = split(v5, v5$id)\n\nv6$id = as.character(v6$id)\nv6_ids = split(v6, v6$id)\n\n\n# function to reformat the data -- 2 lines of data per id\none_id = function(one, cond) {\n  \n  one_layouts = split(one, one$layout)\n\n  one_standard = one_layouts$standard\n  std_trial_dur = sum(one_standard$trial_dur, na.rm = TRUE)\n  std_image_time = sum(one_standard$image_fix_time, na.rm = TRUE)\n  std_text_time = sum(one_standard$text_fix_time, na.rm = TRUE)\n  std_blank_time = sum(one_standard$blank_fix_time, na.rm = TRUE)\n  std_text_pct = std_text_time/std_trial_dur ##\n  std_image_pct = std_image_time/std_trial_dur ##\n  std_blank_pct = std_blank_time/std_trial_dur ##\n  std_text_ct = sum(one_standard$text_fix_count, na.rm = TRUE) ##\n  std_image_ct = sum(one_standard$image_fix_count, na.rm = TRUE) ##\n  std_blank_ct = sum(one_standard$blank_fix_count, na.rm = TRUE) ##\n  std_text_image = sum(one_standard$text_image, na.rm = TRUE) \n  std_text_ws = sum(one_standard$text_ws, na.rm = TRUE) \n  std_image_text = sum(one_standard$image_text, na.rm = TRUE) \n  std_image_ws = sum(one_standard$image_ws, na.rm = TRUE) \n  std_saccade_count = sum(one_standard$saccade_count, na.rm = TRUE)\n  std_weighted_text_image = sum(one_standard$weighted_text_image, na.rm = TRUE)\n  \n  one_other = one_layouts[[1]]\n  cond_trial_dur = sum(one_other$trial_dur, na.rm = TRUE)\n  cond_image_time = sum(one_other$image_fix_time, na.rm = TRUE)\n  cond_text_time = sum(one_other$text_fix_time, na.rm = TRUE)\n  cond_blank_time = sum(one_other$blank_fix_time, na.rm = TRUE)\n  cond_text_pct = cond_text_time/cond_trial_dur ##\n  cond_image_pct = cond_image_time/cond_trial_dur ##\n  cond_blank_pct = cond_blank_time/cond_trial_dur ##\n  cond_text_ct = sum(one_other$text_fix_count, na.rm = TRUE) ##\n  cond_image_ct = sum(one_other$image_fix_count, na.rm = TRUE) ##\n  cond_blank_ct = sum(one_other$blank_fix_count, na.rm = TRUE) ##\n  cond_text_image = sum(one_other$text_image, na.rm = TRUE) \n  cond_text_ws = sum(one_other$text_ws, na.rm = TRUE) \n  cond_image_text = sum(one_other$image_text, na.rm = TRUE) \n  cond_image_ws = sum(one_other$image_ws, na.rm = TRUE) \n  cond_saccade_count = sum(one_other$saccade_count, na.rm = TRUE)\n  cond_weighted_text_image = sum(one_other$weighted_text_image, na.rm = TRUE)\n\n  id = c(unique(one$id), unique(one$id))\n  condition = c(\"standard\", cond)\n  Q = c(unique(one$Q1_3), unique(one$Q4_6))\n  E = c(unique(one$E1_5), unique(one$E6_10))\n  fix_text_pct = c(std_text_pct, cond_text_pct)\n  fix_image_pct = c(std_image_pct, cond_image_pct)\n  fix_blank_pct = c(std_blank_pct, cond_blank_pct)\n  fix_text_ct = c(std_text_ct, cond_text_ct)\n  fix_image_ct = c(std_image_ct, cond_image_ct)\n  fix_blank_ct = c(std_blank_ct, cond_blank_ct)\n  text_image = c(std_text_image, cond_text_image)\n  text_ws = c(std_text_ws, cond_text_ws)\n  image_text = c(std_image_text, cond_image_text)\n  image_ws = c(std_image_ws, cond_image_ws)\n  saccade_count = c(std_saccade_count, cond_saccade_count)\n  weighted_text_image = c(std_weighted_text_image, cond_weighted_text_image)\n  quarter = as.character(one_layouts$standard$quarter)[1]\n  \n  one_new = as.data.frame(cbind(id, condition, quarter, Q, E, \n                                fix_text_pct, fix_image_pct, fix_blank_pct,\n                                fix_text_ct, fix_image_ct, fix_blank_ct,\n                                text_image, text_ws, image_text, image_ws,\n                                saccade_count, weighted_text_image))\n  \n  return(one_new)\n  \n}\n\n\nid = \"\"\ncondition = \"\"\nquarter = \"\"\nQ = 0\nE = 0\nfix_text_pct = 0\nfix_image_pct = 0\nfix_blank_pct = 0\nfix_text_ct = 0\nfix_image_ct = 0\nfix_blank_ct = 0\ntext_image = 0\ntext_ws = 0\nimage_text = 0 \nimage_ws = 0\nsaccade_count = 0\nweighted_text_image = 0\n\nv1_new = as.data.frame(cbind(id, condition, quarter, Q, E,\n                             fix_text_pct, fix_image_pct, fix_blank_pct,\n                             fix_text_ct, fix_image_ct, fix_blank_ct,\n                             text_image, text_ws, image_text, image_ws,\n                             saccade_count,\n                             weighted_text_image))\nv2_new = v1_new\nv3_new = v1_new\nv4_new = v1_new\nv5_new = v1_new\nv6_new = v1_new\n\nfor(i in v1_ids){\n  v1_new = rbind(v1_new, one_id(i, \"separated\"))\n}\nv1_new = v1_new[-1, ]\n\nfor(i in v2_ids){\n  v2_new = rbind(v2_new, one_id(i, \"separated\"))\n}\nv2_new = v2_new[-1, ]\n\nfor(i in v3_ids){\n  v3_new = rbind(v3_new, one_id(i, \"partial\"))\n}\nv3_new = v3_new[-1, ]\n\nfor(i in v4_ids){\n  v4_new = rbind(v4_new, one_id(i, \"partial\"))\n}\nv4_new = v4_new[-1, ]\n\nfor(i in v5_ids){\n  v5_new = rbind(v5_new, one_id(i, \"clean\"))\n}\nv5_new = v5_new[-1, ]\n\nfor(i in v6_ids){\n  v6_new = rbind(v6_new, one_id(i, \"clean\"))\n}\nv6_new = v6_new[-1, ]\n\n\nv1_new$version = 1\nv2_new$version = 2\nv3_new$version = 1\nv4_new$version = 2\nv5_new$version = 1\nv6_new$version = 2\n\n\n# combine all versions and separated by experiments\ndata_new = rbind(v1_new, v2_new, v3_new, v4_new, v5_new, v6_new)\ndata_new$Q = as.numeric(as.character(data_new$Q))\ndata_new$E = as.numeric(as.character(data_new$E))\ndata_new$fix_text_pct = as.numeric(as.character(data_new$fix_text_pct))\ndata_new$fix_image_pct = as.numeric(as.character(data_new$fix_image_pct))\ndata_new$fix_blank_pct = as.numeric(as.character(data_new$fix_blank_pct))\ndata_new$fix_text_ct = as.numeric(as.character(data_new$fix_text_ct))\ndata_new$fix_image_ct = as.numeric(as.character(data_new$fix_image_ct))\ndata_new$fix_blank_ct = as.numeric(as.character(data_new$fix_blank_ct))\ndata_new$text_image = as.numeric(as.character(data_new$text_image))\ndata_new$text_ws = as.numeric(as.character(data_new$text_ws))\ndata_new$image_text = as.numeric(as.character(data_new$image_text))\ndata_new$image_ws = as.numeric(as.character(data_new$image_ws))\ndata_new$saccade_count = as.numeric(as.character(data_new$saccade_count))\ndata_new$weighted_text_image = as.numeric(as.character(data_new$weighted_text_image))\n\ndata_exp1 = rbind(v1_new, v2_new)\ndata_exp1$Q = as.numeric(as.character(data_exp1$Q))\ndata_exp1$E = as.numeric(as.character(data_exp1$E))\ndata_exp1$fix_text_pct = as.numeric(as.character(data_exp1$fix_text_pct))\ndata_exp1$fix_image_pct = as.numeric(as.character(data_exp1$fix_image_pct))\ndata_exp1$fix_blank_pct = as.numeric(as.character(data_exp1$fix_blank_pct))\ndata_exp1$fix_text_ct = as.numeric(as.character(data_exp1$fix_text_ct))\ndata_exp1$fix_image_ct = as.numeric(as.character(data_exp1$fix_image_ct))\ndata_exp1$fix_blank_ct = as.numeric(as.character(data_exp1$fix_blank_ct))\ndata_exp1$text_image = as.numeric(as.character(data_exp1$text_image))\ndata_exp1$text_ws = as.numeric(as.character(data_exp1$text_ws))\ndata_exp1$image_text = as.numeric(as.character(data_exp1$image_text))\ndata_exp1$image_ws = as.numeric(as.character(data_exp1$image_ws))\ndata_exp1$saccade_count = as.numeric(as.character(data_exp1$saccade_count))\ndata_exp1$weighted_text_image = as.numeric(as.character(data_exp1$weighted_text_image))\n\n\ndata_exp2 = rbind(v3_new, v4_new)\ndata_exp2$Q = as.numeric(as.character(data_exp2$Q))\ndata_exp2$E = as.numeric(as.character(data_exp2$E))\ndata_exp2$fix_text_pct = as.numeric(as.character(data_exp2$fix_text_pct))\ndata_exp2$fix_image_pct = as.numeric(as.character(data_exp2$fix_image_pct))\ndata_exp2$fix_blank_pct = as.numeric(as.character(data_exp2$fix_blank_pct))\ndata_exp2$fix_text_ct = as.numeric(as.character(data_exp2$fix_text_ct))\ndata_exp2$fix_image_ct = as.numeric(as.character(data_exp2$fix_image_ct))\ndata_exp2$fix_blank_ct = as.numeric(as.character(data_exp2$fix_blank_ct))\ndata_exp2$text_image = as.numeric(as.character(data_exp2$text_image))\ndata_exp2$text_ws = as.numeric(as.character(data_exp2$text_ws))\ndata_exp2$image_text = as.numeric(as.character(data_exp2$image_text))\ndata_exp2$image_ws = as.numeric(as.character(data_exp2$image_ws))\ndata_exp2$saccade_count = as.numeric(as.character(data_exp2$saccade_count))\ndata_exp2$weighted_text_image = as.numeric(as.character(data_exp2$weighted_text_image))\n\ndata_exp3 = rbind(v5_new, v6_new)\ndata_exp3$Q = as.numeric(as.character(data_exp3$Q))\ndata_exp3$E = as.numeric(as.character(data_exp3$E))\ndata_exp3$fix_text_pct = as.numeric(as.character(data_exp3$fix_text_pct))\ndata_exp3$fix_image_pct = as.numeric(as.character(data_exp3$fix_image_pct))\ndata_exp3$fix_blank_pct = as.numeric(as.character(data_exp3$fix_blank_pct))\ndata_exp3$fix_text_ct = as.numeric(as.character(data_exp3$fix_text_ct))\ndata_exp3$fix_image_ct = as.numeric(as.character(data_exp3$fix_image_ct))\ndata_exp3$fix_blank_ct = as.numeric(as.character(data_exp3$fix_blank_ct))\ndata_exp3$text_image = as.numeric(as.character(data_exp3$text_image))\ndata_exp3$text_ws = as.numeric(as.character(data_exp3$text_ws))\ndata_exp3$image_text = as.numeric(as.character(data_exp3$image_text))\ndata_exp3$image_ws = as.numeric(as.character(data_exp3$image_ws))\ndata_exp3$saccade_count = as.numeric(as.character(data_exp3$saccade_count))\ndata_exp3$weighted_text_image = as.numeric(as.character(data_exp3$weighted_text_image))\n\n\n## correlation plot\ndata_cor = data_new[, 4:17]\ncor(data_cor)\nif(!require(\"corrplot\")){\n  install.packages(\"corrplot\")\n  library(\"corrplot\")\n}\ncorrplot(cor(data_cor), method = \"circle\", type = \"upper\")\n\n# save(data_new, file = \"model_data.RData\")\n\n#######################################################################\n# model part\n\nif(!require(\"lme4\")){\n  install.packages(\"lme4\")\n  library(\"lme4\")\n}\n\nif(!require(\"lmerTest\")){\n  install.packages(\"lmerTest\")\n  library(\"lmerTest\")\n}\n\n\n\n# initial modeling (check version, quarter)\n# quarter is sig, version is not\nmd_E11 = lmer(E ~ quarter + version + condition + scale(image_ws) + (1|id), data_new)\nsummary(md_E11) \nBIC(md_E11) # 677\nmd_E12 = lm(E ~ quarter + version + condition + scale(image_ws), data = data_new)\nsummary(md_E12) \nBIC(md_E12) # 662\n\nmd_Q111 = lmer(Q ~ quarter + version + condition + scale(image_ws) + (1|id), data = data_exp1)\nsummary(md_Q111)\nBIC(md_Q111) # 266\nmd_Q112 = lm(Q ~ quarter + version + condition + scale(image_ws), data = data_exp1)\nsummary(md_Q112)\nBIC(md_Q112) # 258\n\nmd_Q211 = lmer(Q ~ quarter + version + condition + scale(image_ws) + (1|id), data = data_exp2)\nsummary(md_Q211)\nBIC(md_Q211) # 245\nmd_Q212 = lm(Q ~ quarter + version + condition + scale(image_ws), data = data_exp2)\nsummary(md_Q212)\nBIC(md_Q212) # 235\n\nmd_Q311 = lmer(Q ~ quarter + version + condition + scale(image_ws) + (1|id), data = data_exp3)\nsummary(md_Q311)\nBIC(md_Q311) # 268\nmd_Q312 = lm(Q ~ quarter + version + condition + scale(image_ws), data = data_exp3)\nsummary(md_Q312)\nBIC(md_Q312) # 235\n\n\n\n\n\n\n\n\n\n\n## using text_image as representative for eye-tracking data\n# only focus on exp2 and exp3, b/c fully-separated condition don't have text_image alternation\n# model exp2 and exp3 together\n# E model\n# hierarchical linear model for E ~ text_image \nmd_E11 = lmer(E ~ scale(text_image) + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E11) # p = 0.07 -\nBIC(md_E11) # 420\n# Linear model for E ~ text_image (better)\nmd_E12 = lm(E ~ scale(text_image), data = rbind(data_exp2, data_exp3))\nsummary(md_E12) # p = 0.04 -\nBIC(md_E12) # 412\n\n# hierarchical linear model for text_image ~ cond (better)\nmd_E21 = lmer(text_image ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E21) # sig\nBIC(md_E21) # 1188\n# linear model for text_image ~ cond\nmd_E22 = lm(text_image ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E22) # sig\nBIC(md_E22) # 1202\n\n# hierarchical linear model for E ~ cond\nmd_E1 = lmer(E ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E1) # not sig\nBIC(md_E1) # 426\n# linear model for E ~ cond (better)\nmd_E2 = lm(E ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E2) # not sig\nBIC(md_E2) # 419\n\n\n# Q model\n# model exp2 and exp3 separately\n# Q exp2\n# hierarchical linear model for Q2 ~ text_image \nmd_Q211 = lmer(Q ~ scale(text_image) + (1|id), data = data_exp2)\nsummary(md_Q211) # p = 0.0193 -\nBIC(md_Q211) # 265\n# linear model for Q2 ~ text_image (better)\nmd_Q212 = lm(Q ~ scale(text_image), data = data_exp2)\nsummary(md_Q212) # p = 0.0193 -\nBIC(md_Q212) # 258\n\n# hierarchical linear model for text_image ~ cond (better)\nmd_Q221 = lmer(text_image ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q221) # sig -\nBIC(md_Q221) # 635\n# linear model for text_image ~ cond\nmd_Q222 = lm(text_image ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q222) # sig -\nBIC(md_Q222) # 644\n\n# hierarchical linear model for Q2 ~ cond\nmd_Q21 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q21) # sig\nBIC(md_Q21) # 232\n# linear model for Q2 ~ cond (better)\nmd_Q22 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q22) # sig\nBIC(md_Q22) # 225\n\n# check mediation\nmd_Q2 = lm(Q ~ relevel(condition, \"standard\") + scale(text_image), data = data_exp2)\nsummary(md_Q2) # condition sig; text_image not sig\n\n# Q exp3\n# hierarchical linear model for Q3 ~ text_image\nmd_Q311 = lmer(Q ~ scale(text_image) + (1|id), data = data_exp3)\nsummary(md_Q311) # not sig\nBIC(md_Q311) # 261\n# linear model for Q3 ~ text_image (better)\nmd_Q312 = lm(Q ~ scale(text_image), data = data_exp3)\nsummary(md_Q312) # not sig\nBIC(md_Q312) # 255\n\n# hierarchical & normal linear model for text_image ~ cond (better)\nmd_Q321 = lmer(text_image ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q321) # sig\nBIC(md_Q321) # 552\n# linear model for text_image ~ cond\nmd_Q322 = lm(text_image ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q322) # sig\nBIC(md_Q322) # 559\n\n# hierarchical linear model for Q3 ~ cond \nmd_Q31 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q31) # sig\nBIC(md_Q31) # 255\n# linear model for Q3 ~ cond (better)\nmd_Q32 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q32) # sig\nBIC(md_Q32) # 249\n\n\n\n## using image_text as representative for eye-tracking data\n# only focus on exp2 and exp3, b/c fully-separated condition don't have image_text alternation\n# model exp2 and exp3 together\n# E model\n# hierarchical linear model for E ~ image_text \nmd_E11 = lmer(E ~ scale(image_text) + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E11) # p = 0.0717 -\nBIC(md_E11) # 420\n# Linear model for E ~ image_text (better)\nmd_E12 = lm(E ~ scale(image_text), data = rbind(data_exp2, data_exp3))\nsummary(md_E12) # p = 0.0433 -\nBIC(md_E12) # 412\n\n# hierarchical linear model for image_text ~ cond (better)\nmd_E21 = lmer(image_text ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E21) # sig\nBIC(md_E21) # 1188\n# linear model for image_text ~ cond\nmd_E22 = lm(image_text ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E22) # sig\nBIC(md_E22) # 1196\n\n# hierarchical linear model for E ~ cond\nmd_E1 = lmer(E ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E1) # not sig\nBIC(md_E1) # 426\n# linear model for E ~ cond (better)\nmd_E2 = lm(E ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E2) # not sig\nBIC(md_E2) # 419\n\n\n# Q model\n# model exp2 and exp3 separately\n# Q exp2\n# hierarchical linear model for Q2 ~ image_text \nmd_Q211 = lmer(Q ~ scale(image_text) + (1|id), data = data_exp2)\nsummary(md_Q211) # p = 0.00825 -\nBIC(md_Q211) # 264\n# linear model for Q2 ~ image_text (better)\nmd_Q212 = lm(Q ~ scale(image_text), data = data_exp2)\nsummary(md_Q212) # p = 0.00825 -\nBIC(md_Q212) # 256\n\n# hierarchical linear model for image_text ~ cond (better)\nmd_Q221 = lmer(image_text ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q221) # sig -\nBIC(md_Q221) # 634\n# linear model for image_text ~ cond\nmd_Q222 = lm(image_text ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q222) # sig -\nBIC(md_Q222) # 641\n\n# hierarchical linear model for Q2 ~ cond\nmd_Q21 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q21) # sig\nBIC(md_Q21) # 232\n# linear model for Q2 ~ cond (better)\nmd_Q22 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q22) # sig\nBIC(md_Q22) # 225\n\n# check mediation\nmd_Q2 = lm(Q ~ relevel(condition, \"standard\") + scale(image_text), data = data_exp2)\nsummary(md_Q2) # condition sig; image_text not sig\n\n# Q exp3\n# hierarchical linear model for Q3 ~ image_text\nmd_Q311 = lmer(Q ~ scale(image_text) + (1|id), data = data_exp3)\nsummary(md_Q311) # not sig\nBIC(md_Q311) # 261\n# linear model for Q3 ~ image_text (better)\nmd_Q312 = lm(Q ~ scale(image_text), data = data_exp3)\nsummary(md_Q312) # not sig\nBIC(md_Q312) # 255\n\n# hierarchical & normal linear model for image_text ~ cond (better)\nmd_Q321 = lmer(image_text ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q321) # sig\nBIC(md_Q321) # 548\n# linear model for image_text ~ cond\nmd_Q322 = lm(image_text ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q322) # sig\nBIC(md_Q322) # 555\n\n# hierarchical linear model for Q3 ~ cond \nmd_Q31 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q31) # sig\nBIC(md_Q31) # 255\n# linear model for Q3 ~ cond (better)\nmd_Q32 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q32) # sig\nBIC(md_Q32) # 249\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## using weighted text_image as representative for eye-tracking data\n# only focus on exp2 and exp3, b/c fully-separated condition don't have text_image alternation\n# model exp2 and exp3 together\n# E model\n# hierarchical linear model for E ~ text_image \nmd_E11 = lmer(E ~ scale(weighted_text_image) + (1|id), rbind(data_exp2, data_exp3))\nsummary(md_E11) # p = 0.0758 -\nBIC(md_E11) # 420\n# Linear model for E ~ text_image (better)\nmd_E12 = lm(E ~ scale(weighted_text_image), data = rbind(data_exp2, data_exp3))\nsummary(md_E12) # p = 0.0397 -\nBIC(md_E12) # 412\n\n# hierarchical linear model for text_image ~ cond (better)\nmd_E21 = lmer(weighted_text_image ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E21) # sig\nBIC(md_E21) # 1024\n# linear model for text_image ~ cond\nmd_E22 = lm(weighted_text_image ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E22) # sig\nBIC(md_E22) # 1032\n\n# hierarchical linear model for E ~ cond\nmd_E1 = lmer(E ~ relevel(condition, \"standard\") + (1|id), data = rbind(data_exp2, data_exp3))\nsummary(md_E1) # not sig\nBIC(md_E1) # 426\n# linear model for E ~ cond (better)\nmd_E2 = lm(E ~ relevel(condition, \"standard\"), data = rbind(data_exp2, data_exp3))\nsummary(md_E2) # not sig\nBIC(md_E2) # 419\n\n\n# Q model\n# model exp2 and exp3 separately\n# Q exp2\n# hierarchical linear model for Q2 ~ text_image \nmd_Q211 = lmer(Q ~ scale(weighted_text_image) + (1|id), data = data_exp2)\nsummary(md_Q211) # p = 0.0246 -\nBIC(md_Q211) # 266\n# linear model for Q2 ~ text_image (better)\nmd_Q212 = lm(Q ~ scale(weighted_text_image), data = data_exp2)\nsummary(md_Q212) # p = 0.0246 -\nBIC(md_Q212) # 258\n\n# hierarchical linear model for text_image ~ cond (better)\nmd_Q221 = lmer(weighted_text_image ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q221) # sig -\nBIC(md_Q221) # 542\n# linear model for text_image ~ cond\nmd_Q222 = lm(weighted_text_image ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q222) # sig -\nBIC(md_Q222) # 548\n\n# hierarchical linear model for Q2 ~ cond\nmd_Q21 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q21) # sig\nBIC(md_Q21) # 232\n# linear model for Q2 ~ cond (better)\nmd_Q22 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q22) # sig\nBIC(md_Q22) # 225\n\n# check mediation\nmd_Q2 = lm(Q ~ relevel(condition, \"standard\") + scale(weighted_text_image), data = data_exp2)\nsummary(md_Q2) # condition sig; text_image not sig\n\n# Q exp3\n# hierarchical linear model for Q3 ~ text_image\nmd_Q311 = lmer(Q ~ scale(weighted_text_image) + (1|id), data = data_exp3)\nsummary(md_Q311) # not sig\nBIC(md_Q311) # 262\n# linear model for Q3 ~ text_image (better)\nmd_Q312 = lm(Q ~ scale(weighted_text_image), data = data_exp3)\nsummary(md_Q312) # not sig\nBIC(md_Q312) # 255\n\n# hierarchical & normal linear model for text_image ~ cond (better)\nmd_Q321 = lmer(weighted_text_image ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q321) # sig\nBIC(md_Q321) # 486\n# linear model for text_image ~ cond\nmd_Q322 = lm(weighted_text_image ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q322) # sig\nBIC(md_Q322) # 489\n\n# hierarchical linear model for Q3 ~ cond \nmd_Q31 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q31) # sig\nBIC(md_Q31) # 255\n# linear model for Q3 ~ cond (better)\nmd_Q32 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q32) # sig\nBIC(md_Q32) # 249\n\n\n\n\n\n##############################################################\n# using image_ws as representative for eye-tracking data\n# model exp1, exp2 and exp3 together\n# E model\n# hierarchical linear model for E ~ image_ws \nmd_E11 = lmer(E ~ scale(image_ws) + (1|id), data_new)\nsummary(md_E11) # sig -\nBIC(md_E11) # 650\n# Linear model for E ~ image_ws (better)\nmd_E12 = lm(E ~ scale(image_ws), data = data_new)\nsummary(md_E12) # sig -\nBIC(md_E12) # 641\n\n# hierarchical linear model for image_ws ~ cond (better)\nmd_E21 = lmer(image_ws ~ relevel(condition, \"standard\") + (1|id), data = data_new)\nsummary(md_E21) # sig\nBIC(md_E21) # 1915\n# linear model for image_ws ~ cond\nmd_E22 = lm(image_ws ~ relevel(condition, \"standard\"), data = data_new)\nsummary(md_E22) # sig\nBIC(md_E22) # 1931\n\n# hierarchical linear model for E ~ cond\nmd_E1 = lmer(E ~ relevel(condition, \"standard\") + (1|id), data = data_new)\nsummary(md_E1) # seperated sig\nBIC(md_E1) # 667\n# linear model for E ~ cond (better)\nmd_E2 = lm(E ~ relevel(condition, \"standard\"), data = data_new)\nsummary(md_E2) # not sig\nBIC(md_E2) # 661\n\n\n# Q model\n# model exp1, exp2 and exp3 separately\n# Q exp1\n# hierarchical linear model for Q1 ~ image_ws \nmd_Q111 = lmer(Q ~ scale(image_ws) + (1|id), data = data_exp1)\nsummary(md_Q111) # p = 0.012 -\nBIC(md_Q111) # 273\n# linear model for Q1 ~ image_ws (better)\nmd_Q112 = lm(Q ~ scale(image_ws), data = data_exp1)\nsummary(md_Q112) # p = 0.012 -\nBIC(md_Q112) # 266\n\n# hierarchical linear model for image_ws ~ cond (better)\nmd_Q121 = lmer(image_ws ~ relevel(condition, \"standard\") + (1|id), data = data_exp1)\nsummary(md_Q121) # sig -\nBIC(md_Q121) # 668\n# linear model for image_ws ~ cond\nmd_Q122 = lm(image_ws ~ relevel(condition, \"standard\"), data = data_exp1)\nsummary(md_Q122) # sig -\nBIC(md_Q122) # 674\n\n# hierarchical linear model for Q1 ~ cond\nmd_Q11 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp1)\nsummary(md_Q11) # sig\nBIC(md_Q11) # 259\n# linear model for Q2 ~ cond (better)\nmd_Q12 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp1)\nsummary(md_Q12) # sig\nBIC(md_Q12) # 253\n\n# check mediation\nmd_Q1 = lm(Q ~ relevel(condition, \"standard\") + scale(image_ws), data = data_exp1)\nsummary(md_Q1) # condition sig; image_ws not sig\n\n\n# Q exp2\n# hierarchical linear model for Q2 ~ image_ws \nmd_Q211 = lmer(Q ~ scale(image_ws) + (1|id), data = data_exp2)\nsummary(md_Q211) # p = 0.0149 -\nBIC(md_Q211) # 265\n# linear model for Q2 ~ image_ws (better)\nmd_Q212 = lm(Q ~ scale(image_ws), data = data_exp2)\nsummary(md_Q212) # p = 0.0149 -\nBIC(md_Q212) # 258\n\n# hierarchical linear model for image_ws ~ cond (better)\nmd_Q221 = lmer(image_ws ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q221) # sig -\nBIC(md_Q221) # 635\n# linear model for image_ws ~ cond\nmd_Q222 = lm(image_ws ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q222) # sig -\nBIC(md_Q222) # 644\n\n# hierarchical linear model for Q2 ~ cond\nmd_Q21 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q21) # sig\nBIC(md_Q21) # 232\n# linear model for Q2 ~ cond (better)\nmd_Q22 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q22) # sig\nBIC(md_Q22) # 225\n\n# check mediation\nmd_Q2 = lm(Q ~ relevel(condition, \"standard\") + scale(image_ws), data = data_exp2)\nsummary(md_Q2) # condition sig; image_ws not sig\n\n# Q exp3\n# hierarchical linear model for Q3 ~ image_ws\nmd_Q311 = lmer(Q ~ scale(image_ws) + (1|id), data = data_exp3)\nsummary(md_Q311) # not sig 0.199\nBIC(md_Q311) # 261\n# linear model for Q3 ~ image_ws (better)\nmd_Q312 = lm(Q ~ scale(image_ws), data = data_exp3)\nsummary(md_Q312) # not sig 0.199\nBIC(md_Q312) # 254\n\n# hierarchical & normal linear model for image_ws ~ cond (better)\nmd_Q321 = lmer(image_ws ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q321) # sig\nBIC(md_Q321) # 589\n# linear model for image_ws ~ cond\nmd_Q322 = lm(image_ws ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q322) # sig\nBIC(md_Q322) # 595\n\n# hierarchical linear model for Q3 ~ cond \nmd_Q31 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q31) # sig\nBIC(md_Q31) # 255\n# linear model for Q3 ~ cond (better)\nmd_Q32 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q32) # sig\nBIC(md_Q32) # 249\n\n# check mediation\nmd_Q3 = lm(Q ~ relevel(condition, \"standard\") + scale(image_ws), data = data_exp3)\nsummary(md_Q3) # condition sig; text_image not sig\n\n\n\n\n\n\n# rescale and take average of text_image, image_text, image_ws, weighted_text_image\ncomposite_data = rbind(data_exp2, data_exp3)\ncomposite_data$composite_var = (as.numeric(scale(composite_data$text_image)) + as.numeric(scale(composite_data$image_text)) +\n                   as.numeric(scale(composite_data$image_ws)) + as.numeric(scale(composite_data$weighted_text_image)))/4\ndata_exp2$composite_var = (as.numeric(scale(data_exp2$text_image)) + as.numeric(scale(data_exp2$image_text)) +\n                                  as.numeric(scale(data_exp2$image_ws)) + as.numeric(scale(data_exp2$weighted_text_image)))/4\ndata_exp3$composite_var = (as.numeric(scale(data_exp3$text_image)) + as.numeric(scale(data_exp3$image_text)) +\n                             as.numeric(scale(data_exp3$image_ws)) + as.numeric(scale(data_exp3$weighted_text_image)))/4\n\n\n\n## using composite_var as representative for eye-tracking data\n# only focus on exp2 and exp3, b/c fully-separated condition don't have text_image or image_text alternation\n# model exp2 and exp3 together\n# E model\n# hierarchical linear model for E ~ composite_var \nmd_E11 = lmer(E ~ scale(composite_var) + (1|id), composite_data)\nsummary(md_E11) # p = 0.0443 -\nBIC(md_E11) # 420\n# Linear model for E ~ composite_var (better)\nmd_E12 = lm(E ~ scale(composite_var), data = composite_data)\nsummary(md_E12) # p = 0.0228 -\nBIC(md_E12) # 411\n\n# hierarchical linear model for composite_var ~ cond \nmd_E21 = lmer(composite_var ~ relevel(condition, \"standard\") + (1|id), data = composite_data)\nsummary(md_E21) # sig\nBIC(md_E21) # 359\n# linear model for composite_var ~ cond (better)\nmd_E22 = lm(composite_var ~ relevel(condition, \"standard\"), data = composite_data)\nsummary(md_E22) # sig\nBIC(md_E22) # 353\n\n# hierarchical linear model for E ~ cond\nmd_E1 = lmer(E ~ relevel(condition, \"standard\") + (1|id), data = composite_data)\nsummary(md_E1) # not sig\nBIC(md_E1) # 426\n# linear model for E ~ cond (better)\nmd_E2 = lm(E ~ relevel(condition, \"standard\"), data = composite_data)\nsummary(md_E2) # not sig\nBIC(md_E2) # 419\n\n\n# Q model\n# model exp2 and exp3 separately\n# Q exp2\n# hierarchical linear model for Q2 ~ composite_var \nmd_Q211 = lmer(Q ~ scale(composite_var) + (1|id), data = data_exp2)\nsummary(md_Q211) # p = 0.0131 -\nBIC(md_Q211) # 265\n# linear model for Q2 ~ composite_var (better)\nmd_Q212 = lm(Q ~ scale(composite_var), data = data_exp2)\nsummary(md_Q212) # p = 0.0131 -\nBIC(md_Q212) # 257\n\n# hierarchical linear model for composite_var ~ cond \nmd_Q221 = lmer(composite_var ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q221) # sig -\nBIC(md_Q221) # 190\n# linear model for composite_var ~ cond (better)\nmd_Q222 = lm(composite_var ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q222) # sig -\nBIC(md_Q222) # 184\n\n# hierarchical linear model for Q2 ~ cond\nmd_Q21 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp2)\nsummary(md_Q21) # sig\nBIC(md_Q21) # 232\n# linear model for Q2 ~ cond (better)\nmd_Q22 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp2)\nsummary(md_Q22) # sig\nBIC(md_Q22) # 225\n\n# check mediation\nmd_Q2 = lm(Q ~ relevel(condition, \"standard\") + scale(composite_var), data = data_exp2)\nsummary(md_Q2) # condition sig; composite_var not sig\n\n# Q exp3\n# hierarchical linear model for Q3 ~ composite_var\nmd_Q311 = lmer(Q ~ scale(composite_var) + (1|id), data = data_exp3)\nsummary(md_Q311) # not sig\nBIC(md_Q311) # 261\n# linear model for Q3 ~ composite_var (better)\nmd_Q312 = lm(Q ~ scale(composite_var), data = data_exp3)\nsummary(md_Q312) # not sig\nBIC(md_Q312) # 254\n\n# hierarchical & normal linear model for composite_var ~ cond \nmd_Q321 = lmer(composite_var ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q321) # sig\nBIC(md_Q321) # 180\n# linear model for composite_var ~ cond (better)\nmd_Q322 = lm(composite_var ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q322) # sig\nBIC(md_Q322) # 174 \n\n# hierarchical linear model for Q3 ~ cond \nmd_Q31 = lmer(Q ~ relevel(condition, \"standard\") + (1|id), data = data_exp3)\nsummary(md_Q31) # sig\nBIC(md_Q31) # 255\n# linear model for Q3 ~ cond (better)\nmd_Q32 = lm(Q ~ relevel(condition, \"standard\"), data = data_exp3)\nsummary(md_Q32) # sig\nBIC(md_Q32) # 249\n\n",
    "created" : 1525227815205.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3639944231",
    "id" : "B7B12FD",
    "lastKnownWriteTime" : 1525228165,
    "last_content_update" : 1525228165767,
    "path" : "~/Documents/Courses 2017S/Statistical Practice/Reading & Attention/Hierarchical Model  weights/model.R",
    "project_path" : "model.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}